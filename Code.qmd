---
title: "Codes"
---

# Stacked Bar Chart - Redesign

```{r}
library(plotly)
library(dplyr)
library(tidyr)

#MapOpioid <- read.csv("C:/Users/diane/Downloads/Dispensing_Rates.csv") %>%
MapOpioid <- read.csv("State Opioid Dispensing Rates.csv") %>%
  filter(YEAR %in% c(2019, 2023))

# Pivot wider so we have columns for 2019 and 2023 rates ---
wide_data <- MapOpioid %>%
  select(STATE_NAME, STATE_ABBREV, YEAR, opioid_dispensing_rate) %>%
  pivot_wider(names_from = YEAR, values_from = opioid_dispensing_rate)

# - Prepare hover text for each year ---
wide_data <- wide_data %>%
  mutate(
    hover_2019 = paste0(STATE_NAME, "<br>2019 Rate: ", `2019`),
    hover_2023 = paste0(STATE_NAME, "<br>2023 Rate: ", `2023`)
  )

#  Map options ---
g <- list(
  scope = 'usa',
  projection = list(type = 'albers usa'),
  showlakes = TRUE,
  lakecolor = toRGB('white')
)

#  Create the map ---
fig <- plot_geo(wide_data, locationmode = 'USA-states')

# Add 2019 trace (initially visible)
fig <- fig %>% add_trace(
  z = ~`2019`,
  text = ~hover_2019,               # custom hover text
  hoverinfo = "text",               # üëà ensures it shows only our text
  locations = ~STATE_ABBREV,
  color = ~`2019`,
  colors = 'Reds',
  visible = TRUE,
  name = "2019"
)

# Add 2023 trace (initially hidden)
fig <- fig %>% add_trace(
  z = ~`2023`,
  text = ~hover_2023,               # custom hover text
  hoverinfo = "text",               # üëà same here
  locations = ~STATE_ABBREV,
  color = ~`2023`,
  colors = 'Reds',
  visible = FALSE,
  name = "2023"
)

# --- 6Ô∏è‚É£ Add dropdown menu to toggle years ---
fig <- fig %>% layout(
  title = "Opioid Dispensing Rates by State",
  geo = g,
  updatemenus = list(
    list(
      type = "dropdown",
      active = 0,
      buttons = list(
        list(method = "update",
             args = list(list(visible = c(TRUE, FALSE)),
                         list(title = "Opioid Dispensing Rates: 2019")),
             label = "2019"),
        list(method = "update",
             args = list(list(visible = c(FALSE, TRUE)),
                         list(title = "Opioid Dispensing Rates: 2023")),
             label = "2023")
      )
    )
  ),
  colorbar = list(title = "Rate per 100 persons")
)
```

# Heat Map - Redesign

```{r}
#| echo: true
#| message: false
#| warning: false
#| paged-print: false
#Download Library
library(tidyverse)
library(ggplot2)
library(scales)
library(plotly)

#Import Dataset
#OpioidData = read.csv("C:/Users/diane/Downloads/Dispensing_Rates.csv") #make sure its forward slash
OpioidData = read.csv("State Opioid Dispensing Rates.csv")

# --- Prepare long_data (include both 2019 and 2023) ---
long_data <- OpioidData %>%
  filter(YEAR %in% c(2019, 2023)) %>%
  rename(Year = YEAR, Rate = opioid_dispensing_rate) %>%
  group_by(STATE_NAME, STATE_ABBREV) %>%
  mutate(
    pct_change = (Rate[Year == 2023] - Rate[Year == 2019]) / Rate[Year == 2019] * 100
  ) %>%
  ungroup()

# --- Order states by 2019 rates ---
ordered_states <- long_data %>%
  filter(Year == 2019) %>%
  arrange(desc(Rate)) %>%
  pull(STATE_ABBREV)

long_data <- long_data %>%
  mutate(STATE_ABBREV = factor(STATE_ABBREV, levels = ordered_states))

# --- Add hover text ---
long_data <- long_data %>%
  mutate(
    hover_text = paste0(
      "<b>State:</b> ", STATE_NAME,
      "<br><b>Year:</b> ", Year,
      "<br><b>Rate:</b> ", round(Rate, 2),
      "<br><b>% Change (2019‚Üí2023):</b> ", round(pct_change, 1), "%"
    )
  )

# --- Build overlay comparison bar chart ---
stackedbar_plotly_h <- plot_ly() %>%
  # 2019 = background bar
  add_trace(
    data = long_data %>% filter(Year == 2019),
    x = ~Rate,
    y = ~STATE_ABBREV,
    type = "bar",
    orientation = "h",
    name = "2019",
    marker = list(color = "rgba(255,0,0,0.4)"),  # transparent red
    text = ~hover_text,
    hoverinfo = "text"
  ) %>%
  # 2023 = overlay bar
  add_trace(
    data = long_data %>% filter(Year == 2023),
    x = ~Rate,
    y = ~STATE_ABBREV,
    type = "bar",
    orientation = "h",
    name = "2023",
    marker = list(color = "rgba(0,0,139,0.8)"),  # dark blue
    text = ~hover_text,
    hoverinfo = "text"
  ) %>%
  layout(
    barmode = "overlay",
    title = "Opioid Dispensing Rates by State: 2019 vs 2023",
    xaxis = list(title = "Rate (per 100 persons)"),
    yaxis = list(title = "State", categoryorder = "array", categoryarray = rev(ordered_states)),
    legend = list(title = list(text = "Year"))
  )
```

# Sean

```{r}
#Setup Code
library(ggplot2)
library(leaflet)
library(dplyr)
library(scales)
library(tigris)
library(sf)
city_rain <- read.csv("City_Rain.csv")
#| echo: false
city_rain2 <- rbind(city_rain, data.frame(
  City = "U.S. Average Value",
  InchesOfRain = 2.5,
  Rank = NA,
  Latitude = NA,
  Longitude = NA,
  ElevationFeet = NA,
  MetroAreaPopJuly1st2024 = NA,
  AnnualAVGHighTemperatureF = NA,
  AnnualAVGLowTemperatureF = NA,
  AnnualAVGRelativeHumidity = NA
))

# Plot
library(ggplot2)
ggplot(city_rain2, aes(x = reorder(City, -InchesOfRain), y = InchesOfRain)) +
  geom_bar(stat = "identity", fill = "#deebf7", color = "black") +
  labs(title = "10 U.S. Cities with the Least Rainfall",
       x = "City",
       y = "Inches of Rain (Monthly AVG)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```



```{r}
#| message: false
#| warning: false

# Set options to suppress tigris progress bar and enable caching
options(tigris_progress = FALSE, tigris_use_cache = TRUE)

# Load and prepare US state shapes
states <- states(cb = TRUE, resolution = "20m") %>%
  st_transform("+proj=longlat +datum=WGS84")

# Create rainfall color palette
rain_pal <- colorNumeric(palette = "Blues", domain = city_rain$InchesOfRain)

# Build Leaflet map
leaflet(city_rain) %>%
  addProviderTiles(providers$Esri.WorldImagery) %>%
  fitBounds(-125, 24, -66, 50) %>%
  addPolygons(
    data = states,
    fill = FALSE,
    weight = 1,
    color = "white",
    opacity = 0.5
  ) %>%
  addCircleMarkers(
    lng = ~Longitude,
    lat = ~Latitude,
    radius = 10,
    stroke = TRUE,
    color = "black",
    weight = 1,
    opacity = 0.8,
    fillColor = ~rain_pal(InchesOfRain),
    fillOpacity = 0.9,
    popup = ~paste0(
      "<div style='background-color: rgba(255, 255, 255, 0.9); border-radius: 5px; padding: 6px;'>",
      "<strong>", City, "</strong><br>",
      "Avg Monthly Rainfall: ", InchesOfRain, " in<br>",
      "Elevation: ", comma(ElevationFeet), " ft<br>",
      "Metro Population (2024): ", comma(MetroAreaPopJuly1st2024), "<br>",
      "Avg High Temp: ", round(AnnualAVGHighTemperatureF, 1), " ¬∞F<br>",
      "Avg Low Temp: ", round(AnnualAVGLowTemperatureF, 1), " ¬∞F<br>",
      "Avg Humidity: ", round(AnnualAVGRelativeHumidity, 1), " %",
      "</div>"
    )
  ) %>%
  addLabelOnlyMarkers(
    lng = ~Longitude,
    lat = ~Latitude,
    label = ~as.character(Rank),
    labelOptions = labelOptions(
      noHide = TRUE,
      direction = 'center',
      textOnly = TRUE,
      style = list(
        "color" = "orange",
        "font-weight" = "bold",
        "font-size" = "14px",
        "text-shadow" = "1px 1px 2px black"
      )
    )
  ) %>%
  addLegend(
    "bottomright",
    pal = rain_pal,
    values = ~InchesOfRain,
    title = "Inches of Rain",
    opacity = 1
  )
```


